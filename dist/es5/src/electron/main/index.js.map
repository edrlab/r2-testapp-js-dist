{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/electron/main/index.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\n// https://github.com/electron/electron/blob/master/docs/api/sandbox-option.md\n// https://github.com/electron/electron/blob/master/docs/api/process.md\n// https://github.com/electron/electron/blob/master/docs/api/browser-window.md\n// https://github.com/electron/electron/blob/master/docs/api/protocol.md\n// https://github.com/electron/electron/blob/master/docs/api/web-frame.md\n// https://github.com/electron/electron/blob/master/docs/api/web-contents.md\n// https://github.com/electron/electron/blob/master/docs/api/web-request.md\n// https://github.com/electron/electron/blob/master/docs/api/session.md\n// https://github.com/electron/electron/blob/master/docs/api/webview-tag.md\n// https://github.com/electron/electron/blob/master/docs/api/browser-view.md\n// https://github.com/electron/electron/blob/master/docs/api/client-request.md\n// https://github.com/electron/electron/blob/master/docs/api/sandbox-option.md\n// https://github.com/electron/electron/blob/master/docs/api/dialog.md\n// https://github.com/electron/electron/blob/master/docs/api/ipc-renderer.md\n\nimport * as fs from \"fs\";\nimport * as http from \"http\";\nimport * as https from \"https\";\nimport * as path from \"path\";\nimport { URL } from \"url\";\n\nimport { launchStatusDocumentProcessing } from \"@r2-lcp-js/lsd/status-document-processing\";\nimport { LCP } from \"@r2-lcp-js/parser/epub/lcp\";\nimport { setLcpNativePluginPath } from \"@r2-lcp-js/parser/epub/lcp\";\nimport { StatusEnum } from \"@r2-lcp-js/parser/epub/lsd\";\nimport { downloadEPUBFromLCPL } from \"@r2-lcp-js/publication-download\";\nimport { IEventPayload_R2_EVENT_READIUMCSS } from \"@r2-navigator-js/electron/common/events\";\nimport {\n    IReadiumCSS,\n    readiumCSSDefaults,\n} from \"@r2-navigator-js/electron/common/readium-css-settings\";\nimport { convertHttpUrlToCustomScheme } from \"@r2-navigator-js/electron/common/sessions\";\nimport { trackBrowserWindow } from \"@r2-navigator-js/electron/main/browser-window-tracker\";\nimport { lsdLcpUpdateInject } from \"@r2-navigator-js/electron/main/lsd-injectlcpl\";\nimport { setupReadiumCSS } from \"@r2-navigator-js/electron/main/readium-css\";\nimport { initSessions, secureSessions } from \"@r2-navigator-js/electron/main/sessions\";\nimport {\n    initGlobalConverters_OPDS,\n} from \"@r2-opds-js/opds/init-globals\";\nimport {\n    initGlobalConverters_GENERIC,\n    initGlobalConverters_SHARED,\n} from \"@r2-shared-js/init-globals\";\nimport { Publication } from \"@r2-shared-js/models/publication\";\nimport { Link } from \"@r2-shared-js/models/publication-link\";\nimport { isEPUBlication } from \"@r2-shared-js/parser/epub\";\nimport { Server } from \"@r2-streamer-js/http/server\";\nimport { isHTTP } from \"@r2-utils-js/_utils/http/UrlUtils\";\nimport { encodeURIComponent_RFC3986 } from \"@r2-utils-js/_utils/http/UrlUtils\";\nimport { streamToBufferPromise } from \"@r2-utils-js/_utils/stream/BufferUtils\";\nimport { ZipExploded } from \"@r2-utils-js/_utils/zip/zip-ex\";\nimport { ZipExplodedHTTP } from \"@r2-utils-js/_utils/zip/zip-ex-http\";\nimport * as debug_ from \"debug\";\nimport { BrowserWindow, Menu, MenuItemConstructorOptions, app, dialog, ipcMain, shell, webContents } from \"electron\";\nimport * as express from \"express\";\nimport * as portfinder from \"portfinder\";\nimport * as request from \"request\";\nimport * as requestPromise from \"request-promise-native\";\nimport { JSON as TAJSON } from \"ta-json-x\";\nimport * as uuid from \"uuid\";\n\nimport {\n    IEventPayload_R2_EVENT_OPEN_URL_OR_PATH,\n    R2_EVENT_DEVTOOLS,\n    R2_EVENT_OPEN_URL_OR_PATH,\n} from \"../common/events\";\nimport { IStore } from \"../common/store\";\nimport { StoreElectron } from \"../common/store-electron\";\nimport { installLcpHandler } from \"./lcp\";\nimport { installLsdHandler } from \"./lsd\";\nimport { getDeviceIDManager } from \"./lsd-deviceid-manager\";\n\n// import * as filehound from \"filehound\";\n\nconst SECURE = true;\n\nconst electronStoreLSD: IStore = new StoreElectron(\"readium2-testapp-lsd\", {});\nconst deviceIDManager = getDeviceIDManager(electronStoreLSD, \"Readium2 Electron desktop app\");\n\nipcMain.on(\"R2_EVENT_LCP_LSD_OPEN_SETTINGS\", (_event: any, _arg: any) => {\n    if ((electronStoreLSD as any).reveal) {\n        (electronStoreLSD as any).reveal();\n    }\n});\n\n// import * as mime from \"mime-types\";\n\ninitGlobalConverters_OPDS();\ninitGlobalConverters_SHARED();\ninitGlobalConverters_GENERIC();\n\nconst IS_DEV = (process.env.NODE_ENV === \"development\" || process.env.NODE_ENV === \"dev\");\n\nconst lcpPluginPath = IS_DEV ?\n    path.join(process.cwd(), \"LCP\", \"lcp.node\") :\n    path.join(__dirname, \"lcp.node\");\nsetLcpNativePluginPath(lcpPluginPath);\n\nconst debug = debug_(\"r2:testapp#electron/main/index\");\n\nlet _publicationsServer: Server;\nlet _publicationsServerPort: number;\nlet _publicationsRootUrl: string;\nlet _publicationsFilePaths: string[];\nlet _publicationsUrls: string[];\n\n// let DEFAULT_BOOK_PATH = path.join(IS_DEV ? process.cwd() : __dirname, \"misc\", \"epubs\");\n// debug(DEFAULT_BOOK_PATH);\n// if (fs.existsSync(DEFAULT_BOOK_PATH)) {\n//     debug(\"DEFAULT_BOOK_PATH => exists\");\n//     DEFAULT_BOOK_PATH = fs.realpathSync(path.resolve(DEFAULT_BOOK_PATH));\n//     debug(DEFAULT_BOOK_PATH);\n// } else {\n//     debug(\"DEFAULT_BOOK_PATH => missing\");\n//     DEFAULT_BOOK_PATH = \".\";\n// }\n\nlet _lastBookPath: string | undefined;\n\n// protocol.registerStandardSchemes([\"epub\", \"file\"], { secure: true });\n\nfunction openAllDevTools() {\n    for (const wc of webContents.getAllWebContents()) {\n        // if (wc.hostWebContents &&\n        //     wc.hostWebContents.id === electronBrowserWindow.webContents.id) {\n        // }\n        // https://github.com/electron/electron/blob/v3.0.0/docs/api/breaking-changes.md#webcontents\n        wc.openDevTools({ mode: \"detach\" });\n    }\n}\n\n// https://github.com/electron/electron/blob/v3.0.0/docs/api/breaking-changes.md#webcontents\nfunction openTopLevelDevTools() {\n    const bw = BrowserWindow.getFocusedWindow();\n    if (bw) {\n        bw.webContents.openDevTools({ mode: \"detach\" });\n    } else {\n        const arr = BrowserWindow.getAllWindows();\n        arr.forEach((bww) => {\n            bww.webContents.openDevTools({ mode: \"detach\" });\n        });\n    }\n}\n\nipcMain.on(R2_EVENT_DEVTOOLS, (_event: any, _arg: any) => {\n    openAllDevTools();\n});\n\nasync function isManifestJSON(urlOrPath: string): Promise<boolean> {\n    let p = urlOrPath;\n    if (isHTTP(urlOrPath)) {\n        const url = new URL(urlOrPath);\n        p = url.pathname;\n\n        const promise = new Promise<boolean>((resolve, reject) => {\n\n            const isHTTPS = urlOrPath.startsWith(\"https://\");\n            const options = {\n                host: url.host,\n                method: \"HEAD\",\n                path: urlOrPath.substr(urlOrPath.indexOf(url.pathname)),\n                // port: (isHTTPS ? 443 : 80),\n                // protocol: (isHTTPS ? \"https:\" : \"http:\"),\n                // timeout: 1000,\n            };\n            debug(options);\n            (isHTTPS ? https : http).request(options, (response) => {\n                // let str: string | undefined;\n                // let buffs: Buffer[] | undefined;\n\n                debug(response.statusCode);\n\n                if (response.statusCode && (response.statusCode < 200 || response.statusCode >= 300)) {\n                    reject(\"STATUS: \" + response.statusCode);\n                    return;\n                }\n                debug(response.headers);\n                debug(response.headers[\"content-type\"]);\n\n                const okay = response.headers[\"content-type\"] &&\n                    (response.headers[\"content-type\"].indexOf(\"application/webpub+json\") >= 0 ||\n                        response.headers[\"content-type\"].indexOf(\"application/audiobook+json\") >= 0 ||\n                        response.headers[\"content-type\"].indexOf(\"application/json\") >= 0);\n                resolve(okay as boolean);\n\n                // response.on(\"data\", (chunk) => {\n                //     debug(\"data\");\n                //     if (typeof chunk === \"string\") {\n                //         if (!str) {\n                //             str = \"\";\n                //         }\n                //         str += chunk;\n                //     } else {\n                //         if (!buffs) {\n                //             buffs = [];\n                //         }\n                //         buffs.push(chunk);\n                //     }\n                // });\n\n                // response.on(\"end\", async () => {\n                //     debug(\"end\");\n                // });\n            }).on(\"error\", (err) => {\n                reject(err);\n            }).end();\n        });\n\n        let ok: boolean | undefined;\n        try {\n            ok = await promise;\n            debug(\"########### IS MANIFEST (HTTP): \" + ok);\n            return ok; // or we could fallback to below manifest.json test?\n        } catch (err) {\n            debug(err); // fallback below ...\n        }\n    }\n\n    // const fileName = path.basename(p);\n    const isMan = /.*manifest\\.json[\\?]?.*/.test(p); // TODO: hacky!\n    debug(\"########### IS MANIFEST: \" + isMan);\n    return isMan;\n}\n\nasync function tryLSD(publication: Publication, publicationFilePath: string): Promise<boolean> {\n\n    return new Promise(async (resolve, reject) => {\n        if (!publication.LCP) {\n            reject(\"No LCP data!\");\n            return;\n        }\n        try {\n            await launchStatusDocumentProcessing(publication.LCP, deviceIDManager,\n                async (licenseUpdateJson: string | undefined) => {\n                    debug(\"launchStatusDocumentProcessing DONE.\");\n\n                    if (licenseUpdateJson) {\n                        let res: string;\n                        try {\n                            res = await lsdLcpUpdateInject(\n                                licenseUpdateJson,\n                                publication as Publication,\n                                publicationFilePath);\n                            debug(\"EPUB LCP INJECTED: \" + res);\n\n                            try {\n                                await tryLSD(publication, publicationFilePath); // loop to re-init LSD\n                                resolve(true);\n                            } catch (err) {\n                                debug(err);\n                                reject(err);\n                            }\n                        } catch (err) {\n                            debug(err);\n                            reject(err);\n                        }\n                    } else {\n                        resolve(true);\n                    }\n                });\n        } catch (err) {\n            debug(err);\n            reject(err);\n        }\n    });\n}\n\nasync function createElectronBrowserWindow(publicationFilePath: string, publicationUrl: string) {\n\n    debug(\"createElectronBrowserWindow() \" + publicationFilePath + \" : \" + publicationUrl);\n\n    let lcpHint: string | undefined;\n    let publication: Publication | undefined;\n\n    const isWebPub = await isManifestJSON(publicationFilePath);\n    const isHttpWebPub = isWebPub && isHTTP(publicationFilePath);\n    let isHttpWebPubWithoutLCP = isHttpWebPub;\n    if (isWebPub) {\n        // if (!isHTTP(publicationFilePath)) {\n        //     debug(\"**** isManifestJSON && !isHTTP\");\n        //     const manifestJsonDir = path.dirname(publicationFilePath);\n        //     debug(manifestJsonDir);\n        //     const publicationFilePathBase64 =\n        //         encodeURIComponent_RFC3986(Buffer.from(publicationFilePath).toString(\"base64\"));\n        //     const routePath = \"/xpub/\" + publicationFilePathBase64;\n        //     debug(routePath);\n        //     // https://expressjs.com/en/4x/api.html#express.static\n        //     const staticOptions = {\n        //         dotfiles: \"ignore\",\n        //         etag: false,\n        //         fallthrough: false,\n        //         immutable: true,\n        //         index: false,\n        //         maxAge: \"1d\",\n        //         redirect: false,\n        //         // extensions: [\"css\", \"otf\"],\n        //         // setHeaders: function (res, path, stat) {\n        //         //   res.set('x-timestamp', Date.now())\n        //         // }\n        //     };\n        //     _publicationsServer.expressUse(routePath,\n        //         express.static(manifestJsonDir, staticOptions));\n        //     publicationUrl = `${_publicationsServer.serverUrl()}${routePath}/manifest.json`;\n        //     debug(publicationUrl);\n        // }\n\n        const failure = async (err: any) => {\n            debug(err);\n        };\n\n        const handleLCP = (responseStr: string, pub: Publication) => {\n            const responseJson = global.JSON.parse(responseStr);\n            debug(responseJson);\n\n            let lcpl: LCP | undefined;\n            lcpl = TAJSON.deserialize<LCP>(responseJson, LCP);\n            lcpl.ZipPath = \"META-INF/license.lcpl\";\n            lcpl.JsonSource = responseStr;\n            lcpl.init();\n\n            // breakLength: 100  maxArrayLength: undefined\n            // console.log(util.inspect(lcpl,\n            //     { showHidden: false, depth: 1000, colors: true, customInspect: true }));\n\n            pub.LCP = lcpl;\n            // publicationUrl = publicationUrl.replace(\"/pub/\",\n            //     \"/pub/\" + _publicationsServer.lcpBeginToken +\n            //     \"URL_LCP_PASS_PLACEHOLDER\" + _publicationsServer.lcpEndToken);\n            // debug(publicationUrl);\n        };\n\n        const successLCP = async (response: request.RequestResponse, pub: Publication) => {\n\n            // Object.keys(response.headers).forEach((header: string) => {\n            //     debug(header + \" => \" + response.headers[header]);\n            // });\n\n            // debug(response);\n            // debug(response.body);\n\n            if (response.statusCode && (response.statusCode < 200 || response.statusCode >= 300)) {\n                await failure(\"HTTP CODE \" + response.statusCode);\n                return;\n            }\n\n            let responseStr: string;\n            if (response.body) {\n                debug(\"RES BODY\");\n                responseStr = response.body;\n            } else {\n                debug(\"RES STREAM\");\n                let responseData: Buffer;\n                try {\n                    responseData = await streamToBufferPromise(response);\n                } catch (err) {\n                    debug(err);\n                    return;\n                }\n                responseStr = responseData.toString(\"utf8\");\n            }\n\n            handleLCP(responseStr, pub);\n        };\n\n        // No response streaming! :(\n        // https://github.com/request/request-promise/issues/90\n        const needsStreamingResponse = true;\n\n        const handleManifestJson = async (responseStr: string) => {\n            const manifestJson = global.JSON.parse(responseStr);\n            debug(manifestJson);\n\n            // hacky! assumes obfuscated fonts are transformed on the server side\n            // (yet crypto info is present in manifest).\n            // Note that local manifest.json generated with the r2-shared-js CLI does not contain crypto info\n            // when resources are actually produced in plain text.\n            if (isHTTP(publicationFilePath)) {\n\n                const arrLinks = [];\n                if (manifestJson.readingOrder) {\n                    arrLinks.push(...manifestJson.readingOrder);\n                }\n                if (manifestJson.resources) {\n                    arrLinks.push(...manifestJson.resources);\n                }\n\n                arrLinks.forEach((link: any) => {\n                    if (link.properties && link.properties.encrypted &&\n                        (link.properties.encrypted.algorithm === \"http://www.idpf.org/2008/embedding\" ||\n                            link.properties.encrypted.algorithm === \"http://ns.adobe.com/pdf/enc#RC\")) {\n                        delete link.properties.encrypted;\n\n                        let atLeastOne = false;\n                        const jsonProps = Object.keys(link.properties);\n                        if (jsonProps) {\n                            jsonProps.forEach((jsonProp) => {\n                                if (link.properties.hasOwnProperty(jsonProp)) {\n                                    atLeastOne = true;\n                                    return false;\n                                }\n                                return true;\n                            });\n                        }\n                        if (!atLeastOne) {\n                            delete link.properties;\n                        }\n                    }\n                });\n            }\n\n            try {\n                publication = TAJSON.deserialize<Publication>(manifestJson, Publication);\n            } catch (erorz) {\n                debug(erorz);\n                return;\n            }\n            debug(publication);\n\n            const licenseLink = publication.Links ? publication.Links.find((link) => {\n                return link.Rel.indexOf(\"license\") >= 0 &&\n                    link.TypeLink === \"application/vnd.readium.lcp.license.v1.0+json\";\n            }) : undefined;\n            isHttpWebPubWithoutLCP = isHttpWebPub && !licenseLink;\n\n            let p = publicationFilePath;\n            if (isHTTP(publicationFilePath)) {\n                const url = new URL(publicationFilePath);\n                p = url.pathname;\n            }\n            publication.AddToInternal(\"filename\", path.basename(p));\n            publication.AddToInternal(\"type\", \"epub\");\n\n            if (!isHttpWebPubWithoutLCP) {\n                if (!isHTTP(publicationFilePath)) {\n                    const dirPath = path.dirname(publicationFilePath);\n                    const zip = await ZipExploded.loadPromise(dirPath);\n                    publication.AddToInternal(\"zip\", zip);\n                } else {\n                    const url = new URL(publicationFilePath);\n                    const dirPath = path.dirname(p);\n                    url.pathname = dirPath + \"/\";\n                    const zip = await ZipExplodedHTTP.loadPromise(url.toString());\n                    publication.AddToInternal(\"zip\", zip);\n                }\n            }\n\n            const pathDecoded = publicationFilePath;\n            // const pathBase64 =\n            //      decodeURIComponent(publicationFilePath.replace(/.*\\/pub\\/(.*)\\/manifest.json/, \"$1\"));\n            // debug(pathBase64);\n            // const pathDecoded = new Buffer(pathBase64, \"base64\").toString(\"utf8\");\n            // debug(pathDecoded);\n            // // const pathFileName = pathDecoded.substr(\n            // //     pathDecoded.replace(/\\\\/g, \"/\").lastIndexOf(\"/\") + 1,\n            // //     pathDecoded.length - 1);\n            // // debug(pathFileName);\n\n            debug(\"ADDED HTTP pub to server cache: \" + pathDecoded + \" --- \" + publicationFilePath);\n            const publicationUrls = _publicationsServer.addPublications([pathDecoded]);\n            _publicationsServer.cachePublication(pathDecoded, publication);\n            const pubCheck = _publicationsServer.cachedPublication(pathDecoded);\n            if (!pubCheck) {\n                debug(\"PUB CHECK FAIL?\");\n            }\n\n            if (!isHttpWebPubWithoutLCP) {\n                // const publicationFilePathBase64 =\n                //     encodeURIComponent_RFC3986(Buffer.from(pathDecoded).toString(\"base64\"));\n                // publicationUrl = `${_publicationsServer.serverUrl()}/pub/${publicationFilePathBase64}/manifest.json`;\n                publicationUrl = `${_publicationsServer.serverUrl()}${publicationUrls[0]}`;\n            }\n            debug(publicationUrl);\n\n            if (licenseLink && licenseLink.Href) {\n                let lcplHref = licenseLink.Href;\n                if (!isHTTP(lcplHref)) {\n                    if (isHTTP(publicationFilePath)) {\n                        lcplHref = new URL(lcplHref, publicationFilePath).toString();\n                    } else {\n                        lcplHref = publicationFilePath.replace(\"manifest.json\", licenseLink.Href); // hacky!!\n                    }\n                }\n                debug(lcplHref);\n\n                if (isHTTP(lcplHref)) {\n                    // No response streaming! :(\n                    // https://github.com/request/request-promise/issues/90\n                    // const needsStreamingResponse = true;\n                    if (needsStreamingResponse) {\n                        const promise = new Promise((resolve, reject) => {\n                            request.get({\n                                headers: {},\n                                method: \"GET\",\n                                uri: lcplHref,\n                            })\n                                .on(\"response\", async (responsez: request.RequestResponse) => {\n                                    await successLCP(responsez, publication as Publication);\n                                    resolve();\n                                })\n                                .on(\"error\", async (err: any) => {\n                                    await failure(err);\n                                    reject();\n                                });\n                        });\n                        try {\n                            await promise;\n                        } catch (err) {\n                            return;\n                        }\n                    } else {\n                        let responsez: requestPromise.FullResponse;\n                        try {\n                            // tslint:disable-next-line:await-promise no-floating-promises\n                            responsez = await requestPromise({\n                                headers: {},\n                                method: \"GET\",\n                                resolveWithFullResponse: true,\n                                uri: lcplHref,\n                            });\n                        } catch (err) {\n                            await failure(err);\n                            return;\n                        }\n                        await successLCP(responsez, publication);\n                    }\n                } else {\n                    const responsezStr = fs.readFileSync(lcplHref, { encoding: \"utf8\" });\n                    if (!responsezStr) {\n                        await failure(\"Cannot read local file: \" + lcplHref);\n                        return;\n                    }\n                    handleLCP(responsezStr, publication);\n                }\n            }\n        };\n\n        if (isHTTP(publicationFilePath)) {\n            const success = async (response: request.RequestResponse) => {\n\n                // Object.keys(response.headers).forEach((header: string) => {\n                //     debug(header + \" => \" + response.headers[header]);\n                // });\n\n                // debug(response);\n                // debug(response.body);\n\n                if (response.statusCode && (response.statusCode < 200 || response.statusCode >= 300)) {\n                    await failure(\"HTTP CODE \" + response.statusCode);\n                    return;\n                }\n\n                let responseStr: string;\n                if (response.body) {\n                    debug(\"RES BODY\");\n                    responseStr = response.body;\n                } else {\n                    debug(\"RES STREAM\");\n                    let responseData: Buffer;\n                    try {\n                        responseData = await streamToBufferPromise(response);\n                    } catch (err) {\n                        debug(err);\n                        return;\n                    }\n                    responseStr = responseData.toString(\"utf8\");\n                }\n                await handleManifestJson(responseStr);\n            };\n\n            if (needsStreamingResponse) {\n                const promise = new Promise((resolve, reject) => {\n                    request.get({\n                        headers: {},\n                        method: \"GET\",\n                        uri: publicationFilePath,\n                    })\n                        .on(\"response\", async (response: request.RequestResponse) => {\n                            await success(response);\n                            resolve();\n                        })\n                        .on(\"error\", async (err: any) => {\n                            await failure(err);\n                            reject();\n                        });\n                });\n                try {\n                    await promise;\n                } catch (err) {\n                    return;\n                }\n            } else {\n                let response: requestPromise.FullResponse;\n                try {\n                    // tslint:disable-next-line:await-promise no-floating-promises\n                    response = await requestPromise({\n                        headers: {},\n                        method: \"GET\",\n                        resolveWithFullResponse: true,\n                        uri: publicationFilePath,\n                    });\n                } catch (err) {\n                    await failure(err);\n                    return;\n                }\n                await success(response);\n            }\n        } else {\n            const responseStr = fs.readFileSync(publicationFilePath, { encoding: \"utf8\" });\n            if (!responseStr) {\n                await failure(\"Cannot read local file: \" + publicationFilePath);\n                return;\n            }\n            await handleManifestJson(responseStr);\n        }\n    } else if (isEPUBlication(publicationFilePath)) {\n\n        // const fileName = path.basename(publicationFilePath);\n        // const ext = path.extname(fileName).toLowerCase();\n\n        try {\n            publication = await _publicationsServer.loadOrGetCachedPublication(publicationFilePath);\n        } catch (err) {\n            debug(err);\n            return;\n        }\n    }\n\n    if (publication && publication.LCP) {\n        debug(publication.LCP);\n\n        try {\n            await tryLSD(publication, publicationFilePath);\n        } catch (err) {\n            debug(err);\n        }\n\n        let blockBecauseLSD = false;\n        if (publication.LCP.LSD) {\n            // publication.LCP.LSD.Status !== StatusEnum.Active && publication.LCP.LSD.Status !== StatusEnum.Ready\n            if (publication.LCP.LSD.Status === StatusEnum.Revoked\n                || publication.LCP.LSD.Status === StatusEnum.Returned\n                || publication.LCP.LSD.Status === StatusEnum.Cancelled\n                || publication.LCP.LSD.Status === StatusEnum.Expired) {\n\n                blockBecauseLSD = true;\n                debug(\">>>> LICENSE LSD STATUS BLOCK ACCESS!\");\n            }\n        }\n        if (!blockBecauseLSD) {\n            if (publication.LCP.Encryption &&\n                publication.LCP.Encryption.UserKey &&\n                publication.LCP.Encryption.UserKey.TextHint) {\n                lcpHint = publication.LCP.Encryption.UserKey.TextHint;\n            }\n            if (!lcpHint) {\n                lcpHint = \"LCP passphrase\";\n            }\n        }\n    }\n\n    // https://github.com/electron/electron/blob/v4.0.0/docs/api/breaking-changes.md#new-browserwindow-webpreferences-\n    const electronBrowserWindow = new BrowserWindow({\n        height: 600,\n        webPreferences: {\n            allowRunningInsecureContent: false,\n            contextIsolation: false,\n            devTools: true,\n            nodeIntegration: true,\n            nodeIntegrationInWorker: false,\n            sandbox: false,\n            webSecurity: true,\n            webviewTag: true,\n            // preload: __dirname + \"/\" + \"preload.js\",\n        },\n        width: 800,\n    });\n    trackBrowserWindow(electronBrowserWindow); // , _publicationsServer.serverUrl() as string\n\n    // https://github.com/electron/electron/blob/v3.0.0/docs/api/breaking-changes.md#webcontents\n    // https://github.com/electron/electron/blob/v3.0.0/docs/api/breaking-changes.md#webview\n    // electronBrowserWindow.on(\"resize\", () => {\n    //     const [width, height] = electronBrowserWindow.getContentSize();\n\n    //     for (const wc of webContents.getAllWebContents()) {\n    //         if (wc.hostWebContents &&\n    //             wc.hostWebContents.id === electronBrowserWindow.webContents.id) {\n    //             wc.setSize({\n    //                 normal: {\n    //                     height: 400,\n    //                     width,\n    //                 },\n    //             });\n    //         }\n    //     }\n    // });\n\n    electronBrowserWindow.webContents.on(\"dom-ready\", () => {\n        debug(\"electronBrowserWindow dom-ready \" + publicationFilePath + \" : \" + publicationUrl);\n        // https://github.com/electron/electron/blob/v3.0.0/docs/api/breaking-changes.md#webcontents\n        // electronBrowserWindow.webContents.openDevTools({ mode: \"detach\" });\n    });\n\n    if (!isHttpWebPubWithoutLCP && SECURE && isHTTP(publicationUrl)) { // && !await isManifestJSON(publicationFilePath)\n        // This triggers the origin-sandbox for localStorage, etc.\n        publicationUrl = convertHttpUrlToCustomScheme(publicationUrl);\n    }\n\n    const urlEncoded = encodeURIComponent_RFC3986(publicationUrl);\n    let htmlPath = IS_DEV ? `${__dirname}/../renderer/index.html` : `${__dirname}/index.html`;\n    htmlPath = htmlPath.replace(/\\\\/g, \"/\");\n    let fullUrl = `file://${htmlPath}?pub=${urlEncoded}`;\n    if (lcpHint) {\n        fullUrl = fullUrl + \"&lcpHint=\" + encodeURIComponent_RFC3986(lcpHint);\n    }\n    // fullUrl = fullUrl + \"&lcpPlugin=\" + encodeURIComponent_RFC3986(Buffer.from(lcpPluginPath).toString(\"base64\"));\n\n    const urlRoot = _publicationsServer.serverUrl() as string;\n    fullUrl = fullUrl + \"&pubServerRoot=\" + encodeURIComponent_RFC3986(urlRoot);\n    if (isHttpWebPubWithoutLCP) {\n        fullUrl = fullUrl + \"&isHttpWebPubWithoutLCP=1\";\n    }\n\n    // `file://${process.cwd()}/src/electron/renderer/index.html`;\n    // `file://${__dirname}/../../../../src/electron/renderer/index.html`\n    debug(fullUrl);\n    electronBrowserWindow.webContents.loadURL(fullUrl, { extraHeaders: \"pragma: no-cache\\n\" });\n}\n\ninitSessions();\n\nconst readiumCssDefaultsJson: IReadiumCSS = Object.assign({}, readiumCSSDefaults);\nconst readiumCssKeys = Object.keys(readiumCSSDefaults);\n// console.log(readiumCssKeys);\nreadiumCssKeys.forEach((key: string) => {\n    const value = (readiumCSSDefaults as any)[key];\n    // console.log(key, \" => \", value);\n    if (typeof value === \"undefined\") {\n        (readiumCssDefaultsJson as any)[key] = null;\n    } else {\n        (readiumCssDefaultsJson as any)[key] = value;\n    }\n});\n\nconst electronStore: IStore = new StoreElectron(\"readium2-testapp\", {\n    basicLinkTitles: true,\n    readiumCSS: readiumCssDefaultsJson,\n    readiumCSSEnable: false,\n});\n\nfunction __computeReadiumCssJsonMessage(_publication: Publication, _link: Link | undefined):\n    IEventPayload_R2_EVENT_READIUMCSS {\n\n    const on = electronStore.get(\"readiumCSSEnable\");\n    if (on) {\n        let cssJson = electronStore.get(\"readiumCSS\");\n        if (!cssJson) {\n            cssJson = readiumCSSDefaults;\n        }\n        const jsonMsg: IEventPayload_R2_EVENT_READIUMCSS = {\n            setCSS: cssJson,\n        };\n        return jsonMsg;\n    } else {\n        return { setCSS: undefined }; // reset all (disable ReadiumCSS)\n    }\n}\n\nlet _electronBrowserWindowFileOrUrlDialog: BrowserWindow | undefined;\nfunction loadFileOrUrlDialog(initval: string) {\n\n    if (_electronBrowserWindowFileOrUrlDialog) {\n        _electronBrowserWindowFileOrUrlDialog.show();\n        debug(\"_electronBrowserWindowFileOrUrlDialog.show()\");\n        return;\n    }\n\n    const dialogid = uuid.v4().replace(/-/g, \"_\");\n    const html = `\n<html>\n<head>\n<script type=\"text/javascript\">\n\nconst { ipcRenderer } = require('electron');\n\nipcRenderer.on(\"filePath\", (ev, filePath) => {\n\n    const dataEl = document.getElementById('data');\n    dataEl.value = filePath;\n});\n\nconst cancel = () => {\nconst payload = {\nurlOrPath: undefined,\n};\nipcRenderer.send(\"${R2_EVENT_OPEN_URL_OR_PATH + dialogid}\", payload);\n};\nconst submit = () => {\nconst dataEl = document.getElementById('data');\nconst payload = {\nurlOrPath: dataEl.value,\n};\nipcRenderer.send(\"${R2_EVENT_OPEN_URL_OR_PATH + dialogid}\", payload);\n};\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n\ndocument.getElementById('filechoose').addEventListener('click', () => {\n    const payload = {\n        urlOrPath: undefined,\n        fileChooser: true,\n    };\n    ipcRenderer.send(\"${R2_EVENT_OPEN_URL_OR_PATH + dialogid}\", payload);\n});\n\ndocument.getElementById('ok').addEventListener('click', () => submit());\ndocument.getElementById('cancel').addEventListener('click', () => cancel());\n\nconst dataEl = document.getElementById('data');\n\ndataEl.addEventListener('keyup', e => {\ne.which = e.which || e.keyCode;\nif (e.which === 13) {\n    submit();\n}\nif (e.which === 27) {\n    cancel();\n}\n});\n\ndataEl.focus();\ndataEl.select();\n\nconst drag = (ev) => {\nev.preventDefault();\nreturn false;\n};\nconst drop = (ev) => {\nev.preventDefault();\n\nif (!ev.dataTransfer) {\n    return;\n}\n\nlet urlOrPath = undefined;\nif (ev.dataTransfer.items) {\n    for (const item of ev.dataTransfer.items) {\n        if (item.kind === \"file\") {\n            const file = item.getAsFile();\n            if (file) {\n                console.log(file.name);\n                console.log(file.path);\n                urlOrPath = file.path;\n                break;\n            }\n        } else if (item.kind === \"string\") {\n            if (item.type === \"text/plain\") { /* text/uri-list text/html */\n                const data = ev.dataTransfer.getData(item.type);\n                console.log(data);\n                urlOrPath = data;\n            } else {\n                console.log(item.type);\n                console.log(ev.dataTransfer.getData(item.type));\n            }\n        } else {\n            console.log(item.kind);\n        }\n    }\n} else if (ev.dataTransfer.files) {\n    for (const file of ev.dataTransfer.files) {\n        console.log(file.name);\n        console.log(file.path);\n        urlOrPath = file.path;\n        break;\n    }\n}\n\nif (urlOrPath) {\n    const payload = {\n        urlOrPath\n    };\n    ipcRenderer.send(\"${R2_EVENT_OPEN_URL_OR_PATH + dialogid}\", payload);\n}\n\n};\n\nwindow.document.addEventListener(\"dragover\", drag, false);\nwindow.document.addEventListener(\"drop\", drag, false);\n\nconst dropEl = document.getElementById('drop');\n\ndropEl.addEventListener(\"dragover\", drag, false);\ndropEl.addEventListener(\"drop\", drop, false);\n});\n\n</script>\n<style>\nbody {\nfont-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\nline-height: 1.5em;\ncolor: #333;\nbackground-color: #fff;\n}\n\n#container {\n/* align-items: center;\njustify-content: center; */\ndisplay: block;\noverflow: hidden;\n}\n\n#form {\nwidth: 100%;\n}\n\n#label {\nmax-width: 100%;\nmax-height: 100%;\nmargin-bottom: .8em;\npadding: 0 .5em;\n/* white-space: nowrap; */\n/* overflow: hidden; */\n/* text-overflow: ellipsis; */\n}\n\n#data {\nborder-radius: 2px;\nbackground: #fff;\nwidth: 400px;\npadding: .4em .5em;\nborder: 1px solid black;\nmin-height: 2em;\nmargin: 0 0 1.2em;\n}\n\n#data-container {\ntext-align: center;\n}\n\n#buttons {\ntext-align: right;\npadding: 0 .5em 0 0;\n}\n\n#filechoose,\n#buttons > button {\nborder-radius: 2px;\nborder: 0;\nmargin: 0 0 0 .5em;\nfont-size: .8em;\nline-height: 1em;\npadding: .6em 1em;\ncursor: pointer;\n}\n\n#filechoose {\n    margin-right: 8px;\n}\n#filechoose, input {\n    display: inline-block;\n}\n\n/*\n#ok {\nbackground-color: #3879D9;\ncolor: white;\n}\n\n#cancel {\nbackground-color: #DDD;\ncolor: black;\n}\n*/\n\n*:focus {\noutline-style: solid !important;\noutline-width: 2px !important;\noutline-color: blue !important;\noutline-offset: 2px !important;\n}\n\n#drop {\ndisplay: block;\nmargin-top: 1em;\nwidth: 99%;\nheight: 100px;\ncolor: black;\nbackground-color: #eeffee;\nborder: 1px dashed #333333;\nborder-radius: 8px;\nvertical-align: middle;\ntext-align: center;\n\ndisplay: flex;\njustify-content: center;\nflex-direction: column;\n}\n</style>\n</head>\n<body>\n<div id=\"container\">\n<div id=\"form\">\n<div id=\"label\">Enter URL or filepath:</div>\n<div id=\"data-container\">\n<button id=\"filechoose\">Choose...</button>\n<input id=\"data\" value=\"${initval}\"/>\n</div>\n<div id=\"buttons\">\n<button id=\"cancel\">Cancel</button>\n<button id=\"ok\">OK</button>\n</div>\n</div>\n<div id=\"drop\">\nfile drag-and-drop\n</div>\n</div>\n</body>\n</html>\n    `;\n    // tslint:disable-next-line:max-line-length\n    // https://github.com/electron/electron/blob/v4.0.0/docs/api/breaking-changes.md#new-browserwindow-webpreferences-\n    _electronBrowserWindowFileOrUrlDialog = new BrowserWindow({\n        alwaysOnTop: true,\n        height: 300,\n        modal: false,\n        resizable: false,\n        skipTaskbar: false,\n        title: \"Readium2 Electron/NodeJS test app\",\n        useContentSize: false,\n        webPreferences: {\n            allowRunningInsecureContent: false,\n            contextIsolation: false,\n            devTools: true,\n            nodeIntegration: true,\n            nodeIntegrationInWorker: false,\n            sandbox: false,\n            webSecurity: true,\n            webviewTag: false,\n            // preload: __dirname + \"/\" + \"preload.js\",\n        },\n        width: 600,\n    });\n\n    resetMenu(undefined); // _electronBrowserWindowFileOrUrlDialog\n    // _electronBrowserWindowFileOrUrlDialog.setMenu(null);\n\n    async function dialogResult(_event: any, payload: IEventPayload_R2_EVENT_OPEN_URL_OR_PATH) {\n\n        if (payload.urlOrPath) {\n            process.nextTick(async () => {\n                await loadFileOrUrl(payload.urlOrPath);\n            });\n\n            setTimeout(() => {\n                if (_electronBrowserWindowFileOrUrlDialog) {\n                    _electronBrowserWindowFileOrUrlDialog.close();\n                }\n            }, 200);\n        } else if ((payload as any).fileChooser) {\n            process.nextTick(async () => {\n                const choice = dialog.showOpenDialog({\n                    defaultPath: _lastBookPath, // || DEFAULT_BOOK_PATH,\n                    filters: [\n                        { name: \"EPUB publication\", extensions: [\"epub\", \"epub3\"] },\n                        { name: \"LCP license\", extensions: [\"lcpl\"] },\n                        { name: \"Comic book\", extensions: [\"cbz\"] },\n                        // {name: \"Zip archive\", extensions: [\"zip\"]},\n                        // {name: \"Any file\", extensions: [\"*\"]},\n                    ],\n                    message: \"Choose a file\",\n                    properties: [\"openFile\"],\n                    title: \"Open from filesystem\",\n                });\n                if (!choice || !choice.length) {\n                    return;\n                }\n                const filePath = choice[0];\n                debug(filePath);\n\n                // await openFileDownload(filePath);\n                // process.nextTick(async () => {\n                //     loadFileOrUrlDialog(filePath);\n                // });\n                if (_electronBrowserWindowFileOrUrlDialog) {\n                    _electronBrowserWindowFileOrUrlDialog.webContents.send(\"filePath\", filePath);\n                }\n            });\n        } else {\n            if (_electronBrowserWindowFileOrUrlDialog) {\n                _electronBrowserWindowFileOrUrlDialog.close();\n            }\n        }\n    }\n\n    ipcMain.on(R2_EVENT_OPEN_URL_OR_PATH + dialogid, dialogResult);\n\n    _electronBrowserWindowFileOrUrlDialog.on(\"closed\", (_ev: any) => {\n\n        // if (BrowserWindow.getAllWindows().length === 1) { // webContents.getAllWebContents()\n        //     ev.preventDefault();\n        //     return;\n        // }\n\n        ipcMain.removeListener(R2_EVENT_OPEN_URL_OR_PATH + dialogid, dialogResult);\n        _electronBrowserWindowFileOrUrlDialog = undefined;\n    });\n\n    _electronBrowserWindowFileOrUrlDialog.webContents.loadURL(\"data:text/html,\" + html);\n}\n\nipcMain.on(R2_EVENT_OPEN_URL_OR_PATH, async (_event: any, payload: IEventPayload_R2_EVENT_OPEN_URL_OR_PATH) => {\n    await loadFileOrUrl(payload.urlOrPath);\n});\n\nasync function loadFileOrUrl(argPath: string): Promise<boolean> {\n\n    let filePathToLoadOnLaunch: string | undefined;\n    let filePath = argPath;\n    debug(filePath);\n    if (isHTTP(filePath)) {\n        await openFile(filePath);\n        return true;\n    } else {\n        if (!fs.existsSync(filePath)) {\n            filePath = path.join(__dirname, argPath);\n            debug(filePath);\n            if (!fs.existsSync(filePath)) {\n                filePath = path.join(process.cwd(), argPath);\n                debug(filePath);\n                if (!fs.existsSync(filePath)) {\n                    debug(\"FILEPATH DOES NOT EXIST: \" + filePath);\n                } else {\n                    filePathToLoadOnLaunch = filePath;\n                }\n            } else {\n                filePathToLoadOnLaunch = filePath;\n            }\n        } else {\n            filePath = fs.realpathSync(filePath);\n            debug(filePath);\n            filePathToLoadOnLaunch = filePath;\n        }\n    }\n\n    if (filePathToLoadOnLaunch) {\n        if (isEPUBlication(filePathToLoadOnLaunch) || await isManifestJSON(filePathToLoadOnLaunch)) {\n            await openFile(filePathToLoadOnLaunch);\n            return true;\n        } else if (!fs.lstatSync(filePathToLoadOnLaunch).isDirectory()) {\n            await openFileDownload(filePathToLoadOnLaunch);\n            return true;\n        }\n    }\n    return false;\n}\n\napp.on(\"ready\", () => {\n    debug(\"app ready\");\n\n    // protocol.registerServiceWorkerSchemes([\"epub\"]);\n\n    // registerFileProtocol\n    // protocol.registerBufferProtocol(\"epub\",\n    //     (request, callback) => {\n    //         debug(request.url);\n    //         const data = fs.readFileSync(request.url);\n    //         const mimeType = mime.lookup(request.url);\n    //         callback({ data, mimeType });\n    //     }, (error) => {\n    //         debug(error);\n    //     });\n\n    // tslint:disable-next-line:no-floating-promises\n    (async () => {\n        // try {\n        //     _publicationsFilePaths = await filehound.create()\n        //         .depth(0)\n        //         .ignoreHiddenDirectories()\n        //         .ignoreHiddenFiles()\n        //         // .discard(\"node_modules\")\n        //         // .discard(\".*.asar\")\n        //         .paths(DEFAULT_BOOK_PATH)\n        //         .ext([\".epub\", \".epub3\", \".cbz\", \".lcpl\"])\n        //         .find();\n        // } catch (err) {\n        //     debug(err);\n        // }\n        // debug(_publicationsFilePaths);\n        _publicationsFilePaths = [];\n        _publicationsUrls = [];\n\n        _publicationsServer = new Server({\n            disableDecryption: false,\n            disableOPDS: true,\n            disableReaders: true,\n            disableRemotePubUrl: true,\n        });\n\n        if (SECURE) {\n            secureSessions(_publicationsServer); // port 443 ==> HTTPS\n        }\n\n        installLcpHandler(_publicationsServer);\n        installLsdHandler(_publicationsServer, deviceIDManager);\n\n        const readiumCSSPath = IS_DEV ?\n            path.join(process.cwd(), \"dist\", \"ReadiumCSS\").replace(/\\\\/g, \"/\") :\n            path.join(__dirname, \"ReadiumCSS\").replace(/\\\\/g, \"/\");\n\n        setupReadiumCSS(_publicationsServer, readiumCSSPath, __computeReadiumCssJsonMessage);\n\n        // For the webview preload sourcemaps (local file URL)\n        if (IS_DEV) {\n            let preloadPath = \"FOLDER_PATH_TO/preload.js\";\n            // TODO: REEEALLY HACKY! (and does not work in release bundle mode, only with dist/ exploded code)\n            let distTarget: string | undefined;\n            const dirnameSlashed = __dirname.replace(/\\\\/g, \"/\");\n            if (dirnameSlashed.indexOf(\"/dist/es5\") > 0) {\n                distTarget = \"es5\";\n            } else if (dirnameSlashed.indexOf(\"/dist/es6-es2015\") > 0) {\n                distTarget = \"es6-es2015\";\n            } else if (dirnameSlashed.indexOf(\"/dist/es7-es2016\") > 0) {\n                distTarget = \"es7-es2016\";\n            } else if (dirnameSlashed.indexOf(\"/dist/es8-es2017\") > 0) {\n                distTarget = \"es8-es2017\";\n            }\n            if (distTarget) {\n                preloadPath = path.join(process.cwd(),\n                    \"node_modules/r2-navigator-js/dist/\" +\n                    distTarget); // + \"/src/electron/renderer/webview/preload.js\"\n            }\n            preloadPath = preloadPath.replace(/\\\\/g, \"/\");\n            console.log(preloadPath);\n            // https://expressjs.com/en/4x/api.html#express.static\n            const staticOptions = {\n                dotfiles: \"ignore\",\n                etag: true,\n                fallthrough: false,\n                immutable: true,\n                index: false,\n                maxAge: \"1d\",\n                redirect: false,\n                // extensions: [\"css\", \"otf\"],\n                // setHeaders: function (res, path, stat) {\n                //   res.set('x-timestamp', Date.now())\n                // }\n            };\n            _publicationsServer.expressUse(preloadPath, express.static(preloadPath, staticOptions));\n        }\n\n        // _publicationsServer.expressGet([\"/resize-sensor.js\"],\n        //     (req: express.Request, res: express.Response) => {\n\n        //         const swPth = \"./renderer/ResizeSensor.js\";\n        //         const swFullPath = path.resolve(path.join(__dirname, swPth));\n        //         if (!fs.existsSync(swFullPath)) {\n\n        //             const err = \"Missing ResizeSensor JS! \";\n        //             debug(err + swFullPath);\n        //             res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n        //                 + err + \"</p></body></html>\");\n        //             return;\n        //         }\n\n        //         const swJS = fs.readFileSync(swFullPath, { encoding: \"utf8\" });\n        //         // debug(swJS);\n\n        //         // this.setResponseCORS(res);\n        //         res.set(\"Content-Type\", \"text/javascript; charset=utf-8\");\n\n        //         const checkSum = crypto.createHash(\"sha256\");\n        //         checkSum.update(swJS);\n        //         const hash = checkSum.digest(\"hex\");\n\n        //         const match = req.header(\"If-None-Match\");\n        //         if (match === hash) {\n        //             debug(\"ResizeSensor.js cache\");\n        //             res.status(304); // StatusNotModified\n        //             res.end();\n        //             return;\n        //         }\n\n        //         res.setHeader(\"ETag\", hash);\n        //         // res.setHeader(\"Cache-Control\", \"public,max-age=86400\");\n\n        //         res.status(200).send(swJS);\n        //     });\n\n        // _publicationsServer.expressGet([\"/sw.js\"],\n        //     (req: express.Request, res: express.Response) => {\n\n        //         const swPth = \"./renderer/sw/service-worker.js\";\n        //         const swFullPath = path.resolve(path.join(__dirname, swPth));\n        //         if (!fs.existsSync(swFullPath)) {\n\n        //             const err = \"Missing Service Worker JS! \";\n        //             debug(err + swFullPath);\n        //             res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n        //                 + err + \"</p></body></html>\");\n        //             return;\n        //         }\n\n        //         const swJS = fs.readFileSync(swFullPath, { encoding: \"utf8\" });\n        //         // debug(swJS);\n\n        //         // this.setResponseCORS(res);\n        //         res.set(\"Content-Type\", \"text/javascript; charset=utf-8\");\n\n        //         const checkSum = crypto.createHash(\"sha256\");\n        //         checkSum.update(swJS);\n        //         const hash = checkSum.digest(\"hex\");\n\n        //         const match = req.header(\"If-None-Match\");\n        //         if (match === hash) {\n        //             debug(\"service-worker.js cache\");\n        //             res.status(304); // StatusNotModified\n        //             res.end();\n        //             return;\n        //         }\n\n        //         res.setHeader(\"ETag\", hash);\n        //         // res.setHeader(\"Cache-Control\", \"public,max-age=86400\");\n\n        //         res.status(200).send(swJS);\n        //     });\n\n        try {\n            _publicationsServerPort = await portfinder.getPortPromise();\n        } catch (err) {\n            debug(err);\n        }\n\n        // Force HTTPS, see secureSessions()\n        // const serverInfo =\n        await _publicationsServer.start(_publicationsServerPort, SECURE);\n        // debug(serverInfo);\n\n        _publicationsRootUrl = _publicationsServer.serverUrl() as string;\n        debug(_publicationsRootUrl);\n\n        if (_publicationsFilePaths && _publicationsFilePaths.length) {\n            const pubPaths = _publicationsServer.addPublications(_publicationsFilePaths);\n            _publicationsUrls = pubPaths.map((pubPath) => {\n                return `${_publicationsRootUrl}${pubPath}`;\n            });\n            debug(_publicationsUrls);\n        }\n\n        resetMenu(undefined);\n\n        process.nextTick(async () => {\n\n            const args = process.argv.slice(2);\n            debug(\"args:\");\n            debug(args);\n            if (args && args.length && args[0]) {\n                const argPath = args[0].trim();\n                if (await loadFileOrUrl(argPath)) {\n                    return;\n                }\n            }\n\n            loadFileOrUrlDialog(\"\");\n        });\n    })();\n});\n\nfunction resetMenu(browserWindow: BrowserWindow | undefined) {\n\n    const menuTemplate = [\n        {\n            label: \"Readium2 Electron\",\n            submenu: [\n                { label: \"About...\", selector: \"orderFrontStandardAboutPanel:\" },\n                { type: \"separator\" },\n                {\n                    accelerator: \"Command+Q\",\n                    click: () => { app.quit(); },\n                    label: \"Quit\",\n                },\n            ],\n        },\n        {\n            label: \"File\",\n            submenu: [\n            ],\n        },\n        {\n            label: \"Edit\",\n            submenu: [\n                { label: \"Undo\", accelerator: \"CmdOrCtrl+Z\", selector: \"undo:\" },\n                { label: \"Redo\", accelerator: \"Shift+CmdOrCtrl+Z\", selector: \"redo:\" },\n                { type: \"separator\" },\n                { label: \"Cut\", accelerator: \"CmdOrCtrl+X\", selector: \"cut:\" },\n                { label: \"Copy\", accelerator: \"CmdOrCtrl+C\", selector: \"copy:\" },\n                { label: \"Paste\", accelerator: \"CmdOrCtrl+V\", selector: \"paste:\" },\n                { label: \"Select All\", accelerator: \"CmdOrCtrl+A\", selector: \"selectAll:\" },\n            ],\n        },\n        {\n            role: \"window\",\n            submenu: [\n                {\n                    role: \"togglefullscreen\",\n                },\n                {\n                    role: \"minimize\",\n                },\n                {\n                    role: \"close\",\n                },\n            ],\n        },\n        {\n            label: \"Tools\",\n            submenu: [\n                // {\n                //     accelerator: \"CmdOrCtrl+W\",\n                //     click: (_item: any, focusedWindow: any) => {\n                //         if (focusedWindow) {\n                //             focusedWindow.close();\n                //         }\n                //     },\n                //     label: \"Close\",\n                // },\n                {\n                    accelerator: \"CmdOrCtrl+R\",\n                    click: (_item: any, focusedWindow: any) => {\n                        if (focusedWindow) {\n                            focusedWindow.reload();\n                        }\n                    },\n                    label: \"Reload\",\n                },\n                {\n                    accelerator: process.platform === \"darwin\" ? \"Alt+Command+I\" : \"Ctrl+Shift+I\",\n                    click: (_item: any, _focusedWindow: any) => {\n                        openAllDevTools();\n                        // setTimeout(() => {\n                        //     // console.log(focusedWindow);\n                        //     if (focusedWindow) {\n                        //         focusedWindow.webContents.toggleDevTools();\n                        //     }\n                        // }, 1000);\n                    },\n                    label: \"Dev Tools (all)\",\n                },\n                {\n                    accelerator: process.platform === \"darwin\" ? \"Shift+Alt+Command+I\" : \"Alt+Ctrl+Shift+I\",\n                    click: (_item: any, _focusedWindow: any) => {\n                        openTopLevelDevTools();\n                    },\n                    label: \"Dev Tools (top only)\",\n                },\n            ],\n        },\n        {\n            role: \"help\",\n            submenu: [\n                {\n                    click: (_item: any, _focusedWindow: any) => {\n                        shell.openExternal(\"https://github.com/readium/r2-testapp-js/\");\n                    },\n                    label: \"Website...\",\n                },\n            ],\n        },\n    ];\n\n    // (menuTemplate[1].submenu as any[]).push({\n    //     click: async () => {\n    //         ...\n    //     },\n    //     label: \"Choose from filesystem...\",\n    // } as any);\n\n    (menuTemplate[1].submenu as any[]).push({\n        accelerator: \"CmdOrCtrl+O\",\n        click: async () => {\n            loadFileOrUrlDialog(\"\");\n        },\n        label: \"Open...\",\n    } as any);\n\n    (menuTemplate[1].submenu as any[]).push(\n        {\n            type: \"separator\",\n        } as any);\n\n    _publicationsUrls.forEach((pubManifestUrl, n) => {\n        const filePath = _publicationsFilePaths[n];\n        debug(\"MENU ITEM: \" + filePath + \" : \" + pubManifestUrl);\n\n        (menuTemplate[1] as any).submenu.push({\n            click: async () => {\n                debug(filePath);\n                await openFileDownload(filePath);\n            },\n            label: filePath, // + \" : \" + pubManifestUrl,\n        } as any);\n    });\n    const menu = Menu.buildFromTemplate(menuTemplate as MenuItemConstructorOptions[]);\n    if (browserWindow) {\n        browserWindow.setMenu(menu);\n    } else {\n        Menu.setApplicationMenu(menu);\n    }\n}\n\nasync function openFileDownload(filePath: string) {\n    const dir = path.dirname(filePath);\n    _lastBookPath = dir;\n    debug(_lastBookPath);\n\n    const ext = path.extname(filePath);\n    const filename = path.basename(filePath);\n    const destFileName = filename + \".epub\";\n    if (ext === \".lcpl\") {\n        let epubFilePath: string[];\n        try {\n            epubFilePath = await downloadEPUBFromLCPL(filePath, dir, destFileName);\n        } catch (err) {\n            process.nextTick(() => {\n                const detail = (typeof err === \"string\") ?\n                    err :\n                    (err.toString ? err.toString() : \"ERROR!?\");\n                const message = \"LCP EPUB download fail!]\";\n                const res = dialog.showMessageBox({\n                    buttons: [\"&OK\"],\n                    cancelId: 0,\n                    defaultId: 0,\n                    detail,\n                    message,\n                    noLink: true,\n                    normalizeAccessKeys: true,\n                    title: \"Readium2 Electron streamer / navigator\",\n                    type: \"info\",\n                });\n                if (res === 0) {\n                    debug(\"ok\");\n                }\n            });\n            return;\n        }\n\n        const result = epubFilePath as string[];\n        process.nextTick(async () => {\n            const detail = result[0] + \" ---- [\" + result[1] + \"]\";\n            const message = \"LCP EPUB file download success [\" + destFileName + \"]\";\n            const res = dialog.showMessageBox({\n                buttons: [\"&OK\"],\n                cancelId: 0,\n                defaultId: 0,\n                detail,\n                message,\n                noLink: true,\n                normalizeAccessKeys: true,\n                title: \"Readium2 Electron streamer / navigator\",\n                type: \"info\",\n            });\n            if (res === 0) {\n                debug(\"ok\");\n            }\n\n            await openFile(result[0]);\n        });\n    } else {\n        await openFile(filePath);\n    }\n}\n\nasync function openFile(filePath: string) {\n    let n = _publicationsFilePaths.indexOf(filePath);\n    if (n < 0) {\n        if (await isManifestJSON(filePath)) {\n            _publicationsFilePaths.push(filePath);\n            debug(_publicationsFilePaths);\n\n            _publicationsUrls.push(filePath);\n            debug(_publicationsUrls);\n\n            n = _publicationsFilePaths.length - 1; // === _publicationsUrls.length - 1\n        } else {\n            const publicationPaths = _publicationsServer.addPublications([filePath]);\n            debug(publicationPaths);\n\n            _publicationsFilePaths.push(filePath);\n            debug(_publicationsFilePaths);\n\n            _publicationsUrls.push(`${_publicationsRootUrl}${publicationPaths[0]}`);\n            debug(_publicationsUrls);\n\n            n = _publicationsFilePaths.length - 1; // === _publicationsUrls.length - 1\n        }\n\n        process.nextTick(() => {\n            resetMenu(undefined);\n        });\n    }\n\n    const file = _publicationsFilePaths[n];\n    const pubManifestUrl = _publicationsUrls[n];\n\n    await createElectronBrowserWindow(file, pubManifestUrl);\n}\n\napp.on(\"activate\", () => {\n    debug(\"app activate\");\n});\n\napp.on(\"before-quit\", () => {\n    debug(\"app before quit\");\n});\n\napp.on(\"window-all-closed\", () => {\n    debug(\"app window-all-closed\");\n\n    setTimeout(() => {\n        dialog.showMessageBox(\n            {\n                buttons: [ \"yes\", \"no\" ],\n                cancelId: 1,\n                checkboxChecked: undefined,\n                checkboxLabel: undefined,\n                defaultId: 0,\n                detail: undefined,\n                icon: undefined,\n                message: \"Do you want to exit this application?\",\n                noLink: true,\n                normalizeAccessKeys: false,\n                title: \"Readium2 test app, exit?\",\n                type: \"question\",\n            },\n            (response: number, _checkboxChecked: boolean) => {\n\n            if (response === 0) {\n                app.quit();\n            } else {\n                loadFileOrUrlDialog(\"\");\n            }\n        });\n    }, 300);\n    // if (process.platform !== \"darwin\") {\n    //     app.quit();\n    // }\n});\n\napp.on(\"quit\", () => {\n    debug(\"app quit\");\n\n    _publicationsServer.stop();\n});\n"]}