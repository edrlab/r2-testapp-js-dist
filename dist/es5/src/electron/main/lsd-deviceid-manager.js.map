{"version":3,"file":"lsd-deviceid-manager.js","sourceRoot":"","sources":["../../../../../src/electron/main/lsd-deviceid-manager.ts"],"names":[],"mappings":";;AAAA,8BAAgC;AAChC,2BAA6B;AAM7B,IAAM,KAAK,GAAG,MAAM,CAAC,+CAA+C,CAAC,CAAC;AAEtE,IAAM,+BAA+B,GAAG,WAAW,CAAC;AAEpD,4BAAmC,gBAAwB,EAAE,IAAY;IAErE,IAAM,eAAe,GAAqB;QAEtC,aAAa,EAAb,UAAc,GAAW;YAErB,IAAM,KAAK,GAAG,+BAA+B,GAAG,GAAG,CAAC;YAEpD,IAAM,QAAQ,GAAG,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC7C,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAChC,MAAM,CAAC,SAAS,CAAC;YACrB,CAAC;YAED,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC;QAED,WAAW,EAAX;YAEI,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;YAEnB,IAAM,QAAQ,GAAG,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC7C,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACZ,gBAAgB,CAAC,GAAG,CAAC,KAAK,EAAE;oBACxB,QAAQ,EAAE,EAAE;iBACf,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACpB,EAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC;gBAC3B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,QAAQ,CAAC,QAAQ,GAAG,EAAE,CAAC;oBACvB,gBAAgB,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;gBAC1C,CAAC;YACL,CAAC;YAED,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QAED,aAAa,EAAb;YACI,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,cAAc,YAAC,GAAW;YAEtB,IAAM,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAE9B,IAAM,QAAQ,GAAG,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC7C,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAEZ,KAAK,CAAC,qBAAqB,CAAC,CAAC;gBAC7B,MAAM,CAAC;YACX,CAAC;YAED,IAAM,KAAK,GAAG,+BAA+B,GAAG,GAAG,CAAC;YACpD,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YACrB,gBAAgB,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC1C,CAAC;KACJ,CAAC;IACF,MAAM,CAAC,eAAe,CAAC;AAC3B,CAAC;AA1DD,gDA0DC","sourcesContent":["import * as debug_ from \"debug\";\nimport * as uuid from \"uuid\";\n\nimport { IDeviceIDManager } from \"@r2-lcp-js/lsd/deviceid-manager\";\n\nimport { IStore } from \"../common/store\";\n\nconst debug = debug_(\"r2:testapp#electron/main/lsd-deviceid-manager\");\n\nconst LSD_STORE_DEVICEID_ENTRY_PREFIX = \"deviceID_\";\n\nexport function getDeviceIDManager(electronStoreLSD: IStore, name: string): IDeviceIDManager {\n\n    const deviceIDManager: IDeviceIDManager = {\n\n        checkDeviceID(key: string): string | undefined {\n\n            const entry = LSD_STORE_DEVICEID_ENTRY_PREFIX + key;\n\n            const lsdStore = electronStoreLSD.get(\"lsd\");\n            if (!lsdStore || !lsdStore[entry]) {\n                return undefined;\n            }\n\n            return lsdStore[entry];\n        },\n\n        getDeviceID(): string {\n\n            let id = uuid.v4();\n\n            const lsdStore = electronStoreLSD.get(\"lsd\");\n            if (!lsdStore) {\n                electronStoreLSD.set(\"lsd\", {\n                    deviceID: id,\n                });\n            } else {\n                if (lsdStore.deviceID) {\n                    id = lsdStore.deviceID;\n                } else {\n                    lsdStore.deviceID = id;\n                    electronStoreLSD.set(\"lsd\", lsdStore);\n                }\n            }\n\n            return id;\n        },\n\n        getDeviceNAME(): string {\n            return name;\n        },\n\n        recordDeviceID(key: string) {\n\n            const id = this.getDeviceID();\n\n            const lsdStore = electronStoreLSD.get(\"lsd\");\n            if (!lsdStore) {\n                // Should be init'ed at this.getDeviceID()\n                debug(\"LSD store problem?!\");\n                return;\n            }\n\n            const entry = LSD_STORE_DEVICEID_ENTRY_PREFIX + key;\n            lsdStore[entry] = id;\n            electronStoreLSD.set(\"lsd\", lsdStore);\n        },\n    };\n    return deviceIDManager;\n}\n"]}