{"version":3,"file":"lsd-deviceid-manager.js","sourceRoot":"","sources":["../../../../../src/electron/main/lsd-deviceid-manager.ts"],"names":[],"mappings":";;AAEA,8BAAgC;AAChC,2BAA6B;AAE7B,2DAAyD;AAE5C,QAAA,gBAAgB,GAAW,IAAI,8BAAa,CAAC,sBAAsB,EAAE,EAAE,CAAC,CAAC;AAEtF,IAAM,KAAK,GAAG,MAAM,CAAC,+CAA+C,CAAC,CAAC;AAEtE,IAAM,+BAA+B,GAAG,WAAW,CAAC;AAEvC,QAAA,eAAe,GAAqB;IAE7C,aAAa,EAAb,UAAc,GAAW;QAErB,IAAM,KAAK,GAAG,+BAA+B,GAAG,GAAG,CAAC;QAEpD,IAAM,QAAQ,GAAG,wBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAED,WAAW,EAAX;QAEI,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAEnB,IAAM,QAAQ,GAAG,wBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACZ,wBAAgB,CAAC,GAAG,CAAC,KAAK,EAAE;gBACxB,QAAQ,EAAE,EAAE;aACf,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACpB,EAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC;YAC3B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,QAAQ,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACvB,wBAAgB,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;YAC1C,CAAC;QACL,CAAC;QAED,MAAM,CAAC,EAAE,CAAC;IACd,CAAC;IAED,aAAa,EAAb;QACI,MAAM,CAAC,+BAA+B,CAAC;IAC3C,CAAC;IAED,cAAc,YAAC,GAAW;QAEtB,IAAM,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAE9B,IAAM,QAAQ,GAAG,wBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YAEZ,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAC7B,MAAM,CAAC;QACX,CAAC;QAED,IAAM,KAAK,GAAG,+BAA+B,GAAG,GAAG,CAAC;QACpD,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;QACrB,wBAAgB,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC1C,CAAC;CACJ,CAAC","sourcesContent":["import { IDeviceIDManager } from \"@r2-lcp-js/lsd/deviceid-manager\";\nimport { IStore } from \"@r2-navigator-js/electron/common/store\";\nimport * as debug_ from \"debug\";\nimport * as uuid from \"uuid\";\n\nimport { StoreElectron } from \"../common/store-electron\";\n\nexport const electronStoreLSD: IStore = new StoreElectron(\"readium2-testapp-lsd\", {});\n\nconst debug = debug_(\"r2:testapp#electron/main/lsd-deviceid-manager\");\n\nconst LSD_STORE_DEVICEID_ENTRY_PREFIX = \"deviceID_\";\n\nexport const deviceIDManager: IDeviceIDManager = {\n\n    checkDeviceID(key: string): string | undefined {\n\n        const entry = LSD_STORE_DEVICEID_ENTRY_PREFIX + key;\n\n        const lsdStore = electronStoreLSD.get(\"lsd\");\n        if (!lsdStore || !lsdStore[entry]) {\n            return undefined;\n        }\n\n        return lsdStore[entry];\n    },\n\n    getDeviceID(): string {\n\n        let id = uuid.v4();\n\n        const lsdStore = electronStoreLSD.get(\"lsd\");\n        if (!lsdStore) {\n            electronStoreLSD.set(\"lsd\", {\n                deviceID: id,\n            });\n        } else {\n            if (lsdStore.deviceID) {\n                id = lsdStore.deviceID;\n            } else {\n                lsdStore.deviceID = id;\n                electronStoreLSD.set(\"lsd\", lsdStore);\n            }\n        }\n\n        return id;\n    },\n\n    getDeviceNAME(): string {\n        return \"Readium2 Electron desktop app\";\n    },\n\n    recordDeviceID(key: string) {\n\n        const id = this.getDeviceID();\n\n        const lsdStore = electronStoreLSD.get(\"lsd\");\n        if (!lsdStore) {\n            // Should be init'ed at this.getDeviceID()\n            debug(\"LSD store problem?!\");\n            return;\n        }\n\n        const entry = LSD_STORE_DEVICEID_ENTRY_PREFIX + key;\n        lsdStore[entry] = id;\n        electronStoreLSD.set(\"lsd\", lsdStore);\n    },\n};\n"]}