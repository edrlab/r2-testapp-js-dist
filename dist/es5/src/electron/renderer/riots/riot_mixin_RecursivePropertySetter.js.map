{"version":3,"file":"riot_mixin_RecursivePropertySetter.js","sourceRoot":"","sources":["../../../../../../src/electron/renderer/riots/riot_mixin_RecursivePropertySetter.ts"],"names":[],"mappings":";;AAWa,QAAA,kCAAkC,GAAyC;IACpF,IAAI,EAAJ,UAAK,KAAU;IAKf,CAAC;IAED,sBAAsB,EAAtB,UAAuB,IAAY,EAAE,GAAQ,EAAE,YAAoB;QAG/D,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;QAGjB,IAAM,IAAI,GAAG,IAAe,CAAC;QAE7B,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAQ,CAAC;QAEhD,IAAI,CAAC,QAAQ,EAAE;YACX,OAAO;SACV;QAED,IAAI,QAAQ,YAAY,KAAK,EAAE;YAC3B,QAAQ,CAAC,OAAO,CAAC,UAAC,KAA2C;gBACzD,KAAK,CAAC,sBAAsB,CAAC,IAAI,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;YAC1D,CAAC,CAAC,CAAC;SACN;aAAM;YACF,QAAiD;iBAC7C,sBAAsB,CAAC,IAAI,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;SACxD;IACL,CAAC;CACJ,CAAC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nexport interface RiotMixinWithRecursivePropertySetter extends RiotMixin {\n    setPropertyRecursively(name: string, val: any, childTagName: string): void;\n}\n// tslint:disable-next-line:variable-name\nexport const riot_mixin_RecursivePropertySetter: RiotMixinWithRecursivePropertySetter = {\n    init(_opts: any) {\n        // console.log(opts);\n        // console.log(this);\n\n        // const that = this as RiotTag;\n    },\n\n    setPropertyRecursively(name: string, val: any, childTagName: string) {\n\n        // @ts-ignore: TS7017 (Element implicitly has an 'any' type because no index signature)\n        this[name] = val;\n\n        // @ts-ignore: TS2352 (Type of 'this' [setPropertyRecursively(...) function] cannot be converted to RiotTag)\n        const that = this as RiotTag;\n\n        const children = that.tags[childTagName] as any;\n\n        if (!children) {\n            return;\n        }\n\n        if (children instanceof Array) {\n            children.forEach((child: RiotMixinWithRecursivePropertySetter) => {\n                child.setPropertyRecursively(name, val, childTagName);\n            });\n        } else {\n            (children as RiotMixinWithRecursivePropertySetter)\n                .setPropertyRecursively(name, val, childTagName);\n        }\n    },\n};\n"]}